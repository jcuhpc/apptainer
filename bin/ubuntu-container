#!/bin/bash
# Creation of a Ubuntu based apptainer.
if [ $# -eq 0 ] ; then
    # Brief syntax message.
    echo "Syntax:  ubuntu-container <pkg0> [-d <dist>] [-f] [-n <name>] [-v <vers>] [-x <pkg1> [-x <pkg2>] ...]"
    echo "	<pkg0> = Primary software package,"
    echo "	<dist> = Ubuntu version used (def: 23.04),"
    echo "	<name> = Base name used for apptainer image file (def: <pkg0>),"
    echo "      <vers> = Corrected version number to be used for apptainer image file,"
    echo "	<pkg#> = Extra software package(s) required to be installed."
    echo ""
    echo "Packages <pkg0> depends upon will be installed automatically."
    echo ""
    exit 1
fi

# Process arguments & options.
N=$1
S=$1
X=""
V=""
shift
D="23.04"
while [[ $# -gt 0 ]] ; do
    opt="$1"
    case $opt in
	-d)
	    D="$2"
	    shift
	    shift
	    ;;
	-n)
	    N="$2"
	    shift
	    shift
	    ;;
	-v)
	    V="$2"
	    shift
	    shift
	    ;;
	-x)
	    X="$X $2"
	    shift
	    shift
	    ;;
	*)
	    echo "Option $1 unknown, ignoring!"
	    shift
	    ;;
    esac
done

# Base of apptainers creation structure.
BASE=`which $0 | awk -F'/bin' '{print $(NF-1)}'`

# Auto-detect version of primary software package
declare -A DIST=( [18.04]="bionic" [20.04]="focal" \
		  [22.04]="jammy"  [24.04]="noble" )
if [ "$V" = "" ] ; then
    V=`curl https://packages.ubuntu.com/${DIST[$D]}/$S 2>/dev/null | awk -F[\(\)] '/Package:/{print $2}' | awk -F[-+~] '{print $1}'`
    if [ "$V" == "" ] ; then
	echo "Version identification failed.  Trying again often works."
	exit 1
    fi
fi

# Create apptainer definition file
F="metadata/ubuntu/ubuntu-$D-base.template"
[[ ! -f $F ]]   &&   echo "ERROR: $F doesn't exist!"   &&   exit 1
cat $F | sed -e "s/SWNAME/$S $X/g" >$N-$V.def

# Build & Install the apptainer
sudo apptainer build $N-$V.sif $N-$V.def
/bin/install -m 664 -g hpc-admins $N-$V.def metadata/def-files/
/bin/install -m 775 -g hpc-admins $N-$V.sif ../containers/
rm -f $N-$V.def $N-$V.sif
